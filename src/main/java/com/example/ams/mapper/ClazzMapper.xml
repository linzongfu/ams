<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.ams.mapper.ClazzMapper">
  <resultMap id="BaseResultMap" type="com.example.ams.model.Clazz">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="specialty_id" jdbcType="INTEGER" property="specialtyId" />
    <result column="grade_id" jdbcType="INTEGER" property="gradeId" />
    <result column="semester_id" jdbcType="INTEGER" property="semesterId" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, specialty_id, grade_id,semester_id,create_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from clazz
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="getAllClass" parameterType="com.example.ams.model.Clazz" resultMap="BaseResultMap">
    select c.*,u.name as teaName, grade.name as graName,specialty.name as speName,u.number as teacherId from clazz c, user u ,grade,specialty where c.specialty_id=specialty.id and c.grade_id=grade.id and c.teacher_id=u.number
    <if test="name != null and name.length()>0">
      and c.name like concat('%',#{name},'%')
    </if>
    <if test="specialtyId != null">
      and specialty_id=#{specialtyId}
    </if>
    <if test="gradeId != null">
      and grade_id=#{gradeId}
    </if>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from clazz
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.ams.model.Clazz">
    insert into clazz (id, name, specialty_id, 
      grade_id,teacher_id, create_at)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{specialtyId,jdbcType=INTEGER}, 
      #{gradeId,jdbcType=INTEGER},#{teacherId,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.ams.model.Clazz">
    insert into clazz
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="specialtyId != null">
        specialty_id,
      </if>
      <if test="gradeId != null">
        grade_id,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="specialtyId != null">
        #{specialtyId,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null">
        #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.ams.model.Clazz">
    update clazz
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="specialtyId != null">
        specialty_id = #{specialtyId,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null">
        grade_id = #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.ams.model.Clazz">
    update clazz
    set name = #{name,jdbcType=VARCHAR},
      specialty_id = #{specialtyId,jdbcType=INTEGER},
      grade_id = #{gradeId,jdbcType=INTEGER},
      create_at = #{createAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>